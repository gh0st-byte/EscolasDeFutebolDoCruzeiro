# Configuração customizada do ModSecurity para Escolas do Cruzeiro
# Arquivo: /etc/modsecurity/custom-cruzeiro.conf

# === CONFIGURAÇÕES BÁSICAS ===
SecRuleEngine On
SecRequestBodyAccess On
SecResponseBodyAccess Off
SecRequestBodyLimit 13107200
SecRequestBodyNoFilesLimit 131072
SecRequestBodyLimitAction Reject
SecPcreMatchLimit 1000
SecPcreMatchLimitRecursion 1000

# === REGRAS ESPECÍFICAS PARA O PROJETO ===

# 1. Permitir operações AJAX do frontend
SecRule REQUEST_HEADERS:X-Requested-With "@streq XMLHttpRequest" \
    "id:2001,phase:1,pass,msg:'Allow AJAX requests',\
    ctl:ruleRemoveById=941100,ctl:ruleRemoveById=941110"

# 2. Permitir JSON no body para APIs
SecRule REQUEST_HEADERS:Content-Type "@contains application/json" \
    "id:2002,phase:1,pass,msg:'Allow JSON content',\
    ctl:ruleRemoveById=200002,ctl:ruleRemoveById=200003"

# 3. Permitir uploads para área administrativa
SecRule REQUEST_FILENAME "@contains /Backend/admin/" \
    "id:2003,phase:1,pass,msg:'Allow admin uploads',\
    ctl:ruleRemoveById=200002,ctl:ruleRemoveById=200003,\
    ctl:ruleRemoveById=200004"

# 4. Permitir operações com arquivos JSON
SecRule REQUEST_FILENAME "@endsWith .json" \
    "id:2004,phase:1,pass,msg:'Allow JSON file operations',\
    ctl:ruleRemoveById=930120"

# 5. Whitelist para campos específicos do formulário
SecRule ARGS_NAMES "@rx ^(nome|endereco|telefone|whatsapp|instagram|lat|lng|estado|region)$" \
    "id:2005,phase:2,pass,msg:'Allow form fields',\
    ctl:ruleRemoveById=941100,ctl:ruleRemoveById=941110,\
    ctl:ruleRemoveById=941160,ctl:ruleRemoveById=941180"

# 6. Permitir URLs do WhatsApp e Instagram
SecRule ARGS:whatsapp "@contains api.whatsapp.com" \
    "id:2006,phase:2,pass,msg:'Allow WhatsApp URLs',\
    ctl:ruleRemoveById=941100"

SecRule ARGS:instagram_url "@contains instagram.com" \
    "id:2007,phase:2,pass,msg:'Allow Instagram URLs',\
    ctl:ruleRemoveById=941100"

# 7. Permitir coordenadas geográficas (números negativos)
SecRule ARGS:lat "@rx ^-?\d+\.\d+$" \
    "id:2008,phase:2,pass,msg:'Allow latitude coordinates',\
    ctl:ruleRemoveById=941100"

SecRule ARGS:lng "@rx ^-?\d+\.\d+$" \
    "id:2009,phase:2,pass,msg:'Allow longitude coordinates',\
    ctl:ruleRemoveById=941100"

# === REGRAS DE SEGURANÇA ESPECÍFICAS ===

# 8. Bloquear tentativas de SQL Injection em campos específicos(Terá utilidade apenas após um upgrade de Json para um banco de dados convencional)
SecRule ARGS "@detectSQLi" \
    "id:3001,phase:2,block,msg:'SQL Injection detected in form fields',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    tag:'attack-sqli',severity:'CRITICAL'"

# 9. Bloquear XSS em campos de texto
SecRule ARGS "@detectXSS" \
    "id:3002,phase:2,block,msg:'XSS Attack detected',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    tag:'attack-xss',severity:'CRITICAL'"

# 10. Limitar tentativas de login
SecRule REQUEST_FILENAME "@contains /admin/login.php" \
    "id:3003,phase:1,pass,initcol:ip=%{REMOTE_ADDR},\
    setvar:ip.login_attempts=+1,expirevar:ip.login_attempts=300"

SecRule IP:login_attempts "@gt 5" \
    "id:3004,phase:1,deny,status:429,\
    msg:'Too many login attempts from IP'"


# === MONITORAMENTO E LOGS ===

# 11. Log de ações administrativas
SecRule REQUEST_FILENAME "@contains /Backend/admin/" \
    "id:4001,phase:5,pass,msg:'Admin action logged',\
    logdata:'User: %{REMOTE_ADDR} Action: %{REQUEST_METHOD} %{REQUEST_URI}'"

# 12. Monitorar modificações em arquivos JSON
SecRule REQUEST_FILENAME "@rx \.json$" \
    "id:4002,phase:5,pass,msg:'JSON file access',\
    logdata:'File: %{REQUEST_FILENAME} IP: %{REMOTE_ADDR}'"